name: Android Release CI/CD

on:
  push:
    branches: [ "master","release/*", "develop", "hotfix/*" ]
  pull_request:
    branches: [ "master","release/*", "develop", "hotfix/*" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Record Start Time
        id: start_time
        run: echo "workflow_start_time=$(date +%s)" >> $GITHUB_ENV

      - name: Build And Test
        run: |
          echo "Running build..."
          sleep 30  # Simulating a build process        
        

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

#      - name: Clean Gradle
#        run: ./gradlew clean

      - name: Build Gradle
        run: ./gradlew build

      - name: Build Google Distribution Release Apk
        run: ./gradlew assembleGoogleDistributionRelease --stacktrace

      - name: Build Google Sandbox Release Apk
        run: ./gradlew assembleGoogleSandboxRelease --stacktrace

      - name: Build Samsung Distribution Release Apk
        run: ./gradlew assembleSamsungDistributionRelease --stacktrace

      - name: Build Samsung Sandbox Release Apk
        run: ./gradlew assembleSamsungSandboxRelease --stacktrace

      - name: Build OneStore Distribution Release Apk
        run: ./gradlew assembleOnestoreDistributionRelease --stacktrace

      - name: Build OneStore Sandbox Release Apk
        run: ./gradlew assembleOnestoreSandboxRelease --stacktrace

      - name: Record End time
        id: end_time
        run: echo "workflow_end_time=$(date +%s)" >> $GITHUB_ENV

      - name: Calculate Total Duration
        id: total_duration
        run: |
          workflow_start_time=${{ env.workflow_start_time }}
          workflow_end_time=${{ env.workflow_end_time }}
          total_duration=$((workflow_end_time - workflow_start_time))
          if [ $total_duration -lt 60 ]; then
            total_duration_formatted="${total_duration}초"
          else
            total_minutes=$((total_duration / 60))
            total_seconds=$((total_duration % 60))
            total_duration_formatted="${total_minutes}분 ${total_seconds}초"
          fi
          echo "Total duration: $total_duration_formatted"
          echo "total_duration_formatted=$total_duration_formatted" >> $GITHUB_ENV

      - name: Send Build Status Slack Msg
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_WEB_HOOK_URL }}
        with:
          status: custom
          custom_payload: |
            {
             "attachments": [
               {
                 "color": "${{ job.status == 'success' && '#36a64f' || '#FF0000' }}",
                 "title": "GitAction 알림",
                 "fields": [
                {
                  "title": "WorkFlows",
                  "value": "*${{ github.workflow }}*",
                  "short": true
                  },
                  {
                  "title": "Repo",
                  "value": "<https://github.com/${{ github.repository }}>",
                  "short": false
                  },
                  {
                  "title": "Action URL",
                  "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}>",
                  "short": false
                  },
                  {
                     "title": "Commit",
                     "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>",
                     "short": false
                   },
                  {
                     "title": "Branch",
                     "value": "*${{ github.ref }}*",
                     "short": true
                   },
                   {
                     "title": "Event Name",
                     "value": "_${{github.event_name}}_",
                     "short": true
                   },
                   {
                     "title": "작성자",
                     "value": "*${{ github.event.head_commit.author.name }}*",
                     "short": true
                   },
                  {
                     "title": "빌드 시간",
                    "value": "${{ env.total_duration_formatted }}",
                     "short": true
                   },
                  {
                     "title": "Commit Message",
                     "value": "*${{github.event.head_commit.message}}*",
                     "short": false
                   },
                 ]
               }
             ]
            }
        if: always()