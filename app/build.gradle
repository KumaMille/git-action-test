plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
}

def keystorePropertiesFile = rootProject.file('keystore.properties')
def keystoreProperties = new Properties()

if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {

    namespace 'com.example.git_action_test'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.git_action_test"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            splits.abi.enable false
            splits.density.enable false
            aaptOptions.cruncherEnabled false
            ext.alwaysUpdateBuildId = false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        distribution {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(rootProject.file(keystoreProperties['storeFile']))
            storePassword keystoreProperties['storePassword']
        }
    }

    flavorDimensions "store", "sandbox"

    productFlavors {
        def signingDistribution = signingConfigs.distribution

        google {
            dimension "store"
            manifestPlaceholders = [
                    appName: "밀리의서재",
                    channel: "google"
            ]
        }

        onestore {
            dimension "store"
            manifestPlaceholders = [
                    appName: "밀리의서재",
                    channel: "samsung"
            ]
        }

        samsung {
            dimension "store"
            applicationIdSuffix ".samsung"
            manifestPlaceholders = [
                    appName: "밀리의서재 for samsung",
                    channel: "samsung"
            ]
        }

        sandbox {
            dimension "sandbox"
            manifestPlaceholders = [
                    appSuffix: "(sandbox)"
            ]
            signingConfig signingDistribution

        }

        qa {
            dimension "sandbox"
            manifestPlaceholders = [
                    appSuffix: "(QA)"
            ]
            signingConfig signingDistribution

        }

        distribution {
            dimension "sandbox"
            manifestPlaceholders = [
                    appSuffix: ""
            ]
            signingConfig signingDistribution

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}